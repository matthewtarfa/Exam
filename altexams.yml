---
- name: Deploying a laravel app
  hosts: ec2webserver
  remote_user: ubuntu
  become: true

  tasks:
    - name: Upgrade System
      apt: upgrade=dist update_cache=yes

    - name: Add php repository
      apt_repository:
        repo: 'ppa:ondrej/php'

    - name: Install PHP
      apt: name=php8.0 state=latest

    - name: Install PHP MB
      apt: name=php8.0-mbstring state=latest

    - name: Install PHP XML
      apt: name=php-xml state=latest

    - name: Install unzip
      apt: name=unzip state=latest

    - name: Download php-composer
      get_url: https://getcomposer.org/installer
        dest: /tmp/installer

    - name: install composer
      shell: cat /tmp/installer | php -- --install-dir=/usr/local/bin
      args:
        creates: /usr/local/bin/composer

    - name: rename composer.phar to composer
      shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer
      args:
        creates: /usr/local/bin/composer

    - name: make composer executable
      file:
        path: /usr/local/bin/composer
        mode: a+x
        state: file

    - name: install apache2 server
      apt:
        name: apache2
        state: present

    - name: install php curl
      shell: apt install php-curl -y
    - name: install php 8.0 repositories
      shell: |
        apt install softwareproperties-common
        add-apt-repository ppa:ondrej/apache2 -y
        add-apt-repository ppa:ondrej/php -y
        apt-get -y install apt-transport-https lsb-release ca-certificates curl
        apt-get install apt-transport-https gnupg2 ca-certificates -y
        apt update -y
        apt install -y php8.0-common php8.0-cli -y

    - name: install lamp stack
      apt:
        pkg:
          - php8.0-mysql
          - php8.0-curl
          - php8.0-cgi
          - php8.0-xsl
          - php8.0-gd
          - php8.0-mbstring
          - php8.0-zip
          - php8.0-xmlrpc
          - php8.0-soap
          - php8.0-intl
          - libapache2-mod-php
        state: present
    - name: Installing Mysql  and dependencies
      package:
        name: "{{item}}"
        state: present
        update_cache: yes
      loop:
        - mysql-server
        - mysql-client
        - python3-mysqldb
        - libmysqlclient-dev
      tags: [ mysql ]



    - name: start and enable mysql service
      service:
        name: mysql
        state: started
        enabled: yes
      tags: [ mysql ]



    - name: Set the root password
      mysql_user:
        name: root
        password: "123456"
        login_unix_socket: /var/run/mysqld/mysqld.sock
      tags: [ mysql ]

     - name: Remove all anonymous user accounts
      mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "123456"
      tags: [ mysql ]


    - name: Remove the MySQL test database
      mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: "123456"
      tags: [ mysql ]


    - name: Creates database for laravel
      mysql_db:
        name: "laravel"
        state: present
        login_user: root
        login_password: "123456"
      tags: [ mysql ]

    - name: Create MySQL user for laravel
      mysql_user:
        name: "root"
        password: "123456"
        priv: "laravel.*:ALL"
        state: present
        login_user: root
        login_password: "123456"
      tags: [ mysql ]



    - name: Copy pgsql script to remote server
      ansible.builtin.copy:
        src: /home/vagrant/ansible/pgsql.sh
        dest: /home/ubuntu/pgsql.sh
        owner: ubuntu
        group: ubuntu
        mode: '0777'
      tags: [ pgsql ]

    - name: Execute pgsql script
      command: bash pgsql.sh
      tags: [ pgsql ]



    - name: create laravel director
      command: mkdir /var/www/html/laravel-realworld-example-app/
      tags: [ lardir ]


    - name: clone laravel codebase
      git:
        repo: https://github.com/f1amy/laravel-realworld-example-app.git
        dest: /var/www/html/laravel-realworld-example-app
      tags: [ clolar ]



    - name: Permission for composer Installation
      ansible.builtin.file:
        path: /var/www/html/laravel-realworld-example-app/
        owner: ubuntu
        group: ubuntu
        mode: '0777'
      tags: [ compin ]
    - name: Remove default web.php from routes
      shell: rm -rf /var/www/html/laravel-realworld-example-app/routes/web.php
      tags: [ compin ]



    - name: Create new web.php in routes
      template:
        src=/home/vagrant/ansible/web.php
        dest=/var/www/html/laravel-realworld-example-app/routes/web.php
      tags: [ compin ]




    - name: "Composer  install"
      become: false
      composer:
        command: install
        global_command: false
        working_dir: /var/www/html/laravel-realworld-example-app/
      tags: [ compin ]
    - name: Change permissions
      shell: chown -R ubuntu:www-data /var/www/html/laravel-realworld-example-app
      tags: [ perm ]



    - name: Change permissions for storage
      shell: chmod -R 777 /var/www/html/laravel-realworld-example-app/storage
      tags: [ perm1 ]



    - name: Create .env file for database
      template:
        src=/home/vagrant/ansible/env.example
        dest=/var/www/html/laravel-realworld-example-app/.env
      tags: [ env ]




    - name: To Change artisan file permission
      shell: chmod 777 /var/www/html/laravel-realworld-example-app/artisan
      tags: [ chart ]
    
    - name: update and upgrade
      shell: apt update && apt upgrade -y
      tags: [ update ]



    - name: To generate artisan key
      shell: php /var/www/html/laravel-realworld-example-app/artisan key:generate
      ignore_errors: true
      tags: [ genkey ]


    - name: update and upgrade
      shell: apt update && apt upgrade -y
      tags: [ upgrade ]

    - name: clear cache
      shell: php /var/www/html/laravel-realworld-example-app/artisan config:clear
      tags: [ cache ]


    - name: update and upgrade
      shell: apt update && apt upgrade -y
      tags: [ updupg ]
    
    - name: run migration artisan migrate
      shell: php /var/www/html/laravel-realworld-exmple-app/artisan migrate
      ignore_errors:  true
      tags: [ artmig ]


    - name: update and upgrade
      shell: apt update && apt upgrade -y
      tags: [ uugd ]


    - name: run migration fresh
      shell: php /var/www/html/laravel-realworld-example-app/artisan migrate:fresh
      ignore_errors: true
      tags: [ migfrs ]



    - name: update and upgrade
      shell: apt update && apt upgrade -y
      tags: [ dagra ]


    - name: run migration seed
      shell: php /var/www/html/laravel-realworl-exmple-app/artisan migrate --seed
      ignore_errors: true
      tags: [ migseed ]
    
    - name: update and upgrade
      shell: apt update && apt upgrade -y
      tags: [ tede ]


    - name: run migration refresh
      shell: php /var/www/html/laravel-realworld-example-app/artisan migrate:refresh --seed
      ignore_errors: true
      tags: [ migref ]


    - name: Remove default apache page
      file: name=/etc/apache2/sites-enabled/000-default.conf state=absent
      tags: [ apache ]


    - name: create apache vhosts for domain
      template:
        src=/home/vagrant/ansible/laravel.conf
        dest=/etc/apache2/sites-available/laravel.conf
      tags: [ apache ]



    - name: pemission for laravel conf file
      shell: chmod -R 777 /etc/apache2/sites-available/laravel.conf
      tags: [ apache ]
    
     - name: Delete default Apache2 configuration
      command: rm -rf /etc/apache2/sites-available/000-deault.conf
      tags: [ apache ]


    - name: Enable Laravel Host configuration
      command: a2ensite laravel.conf
      tags: [ apache ]



    - name: Enable the Apache rewrite module
      command:  a2enmod rewrite
      tags: [ apache ]


    - name: Restart apache2
      command: systemctl restart apache2
      tags: [ apache ]

